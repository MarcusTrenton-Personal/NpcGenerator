{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "https://github.com/MarcusTrenton-Personal/NpcGenerator.git",
	"title": "Npc Configuration",
	"description": "All of the categorized, weighted traits an npc can possess",
	"type": "object",
	"properties": {
		"replacements": {
			"description": "Traits that are replaced with a user-specified choice for the next batch of npcs. For example, a trait of 'region-specific' in the 'race' category is replaced with user selected race. The replacement for one batch of npcs could be Japanese and another could be Nigerian. This allows quick generation of region-specific npcs in a globe trotting session.",
			"type": "array",
			"items": { "$ref": "#/$defs/trait_id"},
			"uniqueItems": true
		},
		"trait_categories": {
			"description": "List of all categories of traits. By default an NPC can only have 1 trait from each category.",
			"type": "array",
			"items": { "$ref": "#/$defs/trait_category"},
			"minItems": 1,
			"uniqueItems": true
		}
	},
	"additionalProperties": false,
	"required": ["trait_categories"],
	
	"$defs": {
		"trait_category": {
			"description": "A list of related traits. Usually an npc to have one of the traits in the category.",
			"type": "object",
			"properties": {
				"name": {
					"description": "The user-facing name for the trait category",
					"type": "string"
				},
				"selections": { "$ref": "#/$defs/selections"},
				"requirements": {
					"description": "Optional object for required traits needed for any selections in this category.",
					"oneOf": [
						{"$ref": "#/$defs/logical_operation"},
						{"$ref": "#/$defs/trait_id"}
					]
				},
				"traits": {
					"description": "List of all traits in one category. By default an NPC can only have 1 trait from a category.",
					"type": "array",
					"items": { "$ref": "#/$defs/trait"},
					"minItems": 1,
					"uniqueItems": true
				}
			},
			"additionalProperties": false,
			"required": ["name", "selections", "traits"]
		},
		"trait": {
			"description": "An Npc trait, with a name and weight.",
			"type": "object",
			"properties": {
				"name": {
					"description": "The user-facing name for the trait",
					"type": "string"
				},
				"weight": {
					"description": "The likelihood that this trait will be picked. Two traits of equal weight are equally as likely to be picked. If one trait has double the weight of another, it is twice as likely to be picked. If the sum of all weights in a category add up to 100, the weight is a percentage change to be picked.",
					"type": "integer",
					"minimum": 0
				},
				"hidden": {
					"description": "Whether the trait is shown in Npcs. For example a hidden Npc quirk of 'None'. Optional and assumed false if not present.",
					"type": "boolean",
					"default": "false"
				},
				"bonus_selection": {
					"description": "If this trait is selected then additional traits will be selected in the specified category. Example 1: In the category of races, the biracial trait will select 2 more races from the same category. Example 2: In the Quirk category, the disablity trait will select 1 more trait in the disability category. Optional.",
					"type": "object",
					"properties": {
						"trait_category_name": {
							"description": "Must match the name properties of a trait_category",
							"type": "string"
						},
						"selections": { "$ref": "#/$defs/selections"}
					},
					"required": ["trait_category_name", "selections"],
					"additionalProperties": false
				}
			},
			"required": ["name", "weight"],
			"additionalProperties": false
		},
		"selections": {
			"description": "How many traits from this category will be selected. No trait can be selected twice.",
			"type": "integer",
			"minimum": 0
		},
		"trait_id": {
			"description": "A reference to a trait. Since multiple categories can have traits of the same name, the category must be specified too. For example a Disability category and Criminal History category both with a None trait.",
			"type": "object",
			"properties": {
				"category_name": {
					"description": "The category of the trait.",
					"type": "string"
				},
				"trait_name": {
					"description": "The trait name.",
					"type": "string"
				}
			},
			"required": ["category_name", "trait_name"],
			"additionalProperties": false
		},
		"logical_operation": {
			"description": "A combination of logicalOperators or traits which evaluate to true to false. Operators are Any, All, and None. For example a logical operation can represent 'Any of Mute, Blind, or Deaf.' Logical operators can be nested, for example nesting a None inside an Any for the operation 'Any of Mute or None of Zombie'",
			"type": "object",
			"properties": {
				"operator" : {
					"description": "The type of operation, whether 'All' the operands must be true for the whole operation to be true, whether 'Any' of the operands are true, and whether 'None' are true.",
					"enum": ["Any", "All", "None"]
				},
				"operands": {
					"description": "The subjects of the operator. For the logical operator 'Any of Mute, Blind, or Deaf' - Mute, Blind, and Deaf are operands",
					"type": "array",
					"items": { 
						"anyOf": [
							{"$ref": "#"},
							{"$ref": "#/$defs/trait_id"}
						]
					},
					"minItems": 1,
					"uniqueItems": true
				}
			},
			"required": ["operator", "operands"],
			"additionalProperties": false
		}
	}
}
