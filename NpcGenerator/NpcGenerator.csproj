<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  
  <Import Project="$(TextTemplating)" />

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <UseWPF>true</UseWPF>
    <ApplicationIcon>1200px-2-Dice-Icon.svg.ico</ApplicationIcon>
    <Authors>Marcus Trenton</Authors>
    <Company />
    <Description>Randomly generate NPCs' demographics</Description>
    <Copyright>Marcus Trenton</Copyright>
    <RepositoryType>Git</RepositoryType>
    <PackageTags></PackageTags>
    <RepositoryUrl>https://github.com/MarcusTrenton-Personal/NpcGenerator.git</RepositoryUrl>
    <PackageIcon>1200px-2-Dice-Icon.svg.ico</PackageIcon>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>MarcusTrentonPersonalSoftware.pub</AssemblyOriginatorKeyFile>
    <DelaySign>true</DelaySign>
    <PackageLicenseFile>GNU License.rtf</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <TransformOnBuild>true</TransformOnBuild>
    <OverwriteReadOnlyOutputFiles>true</OverwriteReadOnlyOutputFiles>
    <TransformOutOfDateOnly>false</TransformOutOfDateOnly>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
  </ItemGroup>

  <ItemGroup>
    <License Include="..\GNU License.rtf">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </License>
    <None Include="1200px-2-Dice-Icon.svg.ico">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="AssemblyInfo.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>AssemblyInfo.tt</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="AssemblyInfo.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>AssemblyInfo.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <!--Despite the docs https://docs.microsoft.com/en-us/visualstudio/modeling/code-generation-in-a-build-process?view=vs-2022, 
  T4 text templating is NOT invoked automatically through PropertyGroups. Instead, it must be invoked explicitly.-->
  <Target Name="AutogenerateCode" BeforeTargets="PreBuildEvent">
    <Exec Command="msbuild NpcGenerator.csproj /t:TransformAll" ConsoleToMsBuild="true" />
  </Target>

  <Target Name="CopyDataFilesAfterBuild" AfterTargets="Build">
    <ItemGroup>
      <License Include="..\GNU License.rtf" />
    </ItemGroup>
    <Copy SourceFiles="@(License)" DestinationFolder="$(OutDir)" />
  </Target>

  <Target Name="TestBeforePublish" BeforeTargets="Publish">
    <Message Text="Running tests before allowing publishing" Importance="high" />
    <Exec Command="..\Tests\BuildAndRunTests.bat" WorkingDirectory="..\Tests" ConsoleToMsBuild="true" />
  </Target>

  <!-- If the PublishDir in DropboxFolder.pubxml changes then these Conditions must change too. Sadly there's no way to reference a publish profile by name. -->
  <Target Name="PublishSampleFiles" AfterTargets="Publish">
    <Message Text="Copying Sample Configurations folder to Dropbox" Importance="high" Condition="'$(PublishDir)'=='$(Dropbox)\Urthsark\NPC Generator\'" />
    <ItemGroup>
      <Sample Include="..\Sample Configurations\*.csv" />
    </ItemGroup>
    <Copy SourceFiles="@(Sample)" DestinationFolder="$(PublishDir)Sample Configurations" Condition="'$(PublishDir)'=='$(Dropbox)\Urthsark\NPC Generator\'" />
    <Copy SourceFiles="@(License)" DestinationFolder="$(PublishDir)" />
    <Exec Command="signtool sign /f %SigningKey% /p %SigningKeyPassword% /fd SHA1 &quot;$(PublishDir)$(TargetName).exe" ConsoleToMsBuild="true" />
  </Target>

</Project>